@page "/"
@inject UserClient Client
@using LoginFront.Clients
@using LoginFront.models
@attribute [StreamRendering]

<PageTitle>Login</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/loginpage">Login</a>
</div>

@if (users is null)
{
    <p><em>Loading....</em></p>
}
else
{
    <table class="table table-scriped table-bordered table-hover mt-3">
        <thead class="table-dark">
        <th>Id</th>
        <th>Nickname</th>
        <th>Email</th>
        <th>Edit</th>
        </thead>
    
        <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Nickname</td>
                <td>@user.Email</td>
                <td>
                    <div>
                        <a class="btn btn-primary me -2" role="button" href="@UserUrl(user.Id)">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteMoalId(user)">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </div>
                    <DeleteModal User="@user"/>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    private UserSummary[]? users;

    protected override async Task OnInitializedAsync()
    {
        users = await Client.GetUsersAsync();
    }
    
    private static string UserUrl(int id) => $"/signIn/{id}";

    private string GetDeleteMoalId(UserSummary user)
    {
        System.Diagnostics.Debug.WriteLine("OnClick Delete");
        return $"#{DeleteModal.GetModalId(user)}";
    }
}
